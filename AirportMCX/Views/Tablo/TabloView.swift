import SwiftUI

struct TabloView: View {
    @State private var selectedSubTab = 0 // –ê–∫—Ç–∏–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞
    @State private var swipeProgress: CGFloat = 0 // –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª–æ—Å–∫–∏
    @StateObject private var viewModel = FlightsViewModel()
    @State private var isSearching = false // –£–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–∏—Å–∫–æ–º

    var body: some View {
        VStack(spacing: 0) {
            // –í–µ—Ä—Ö–Ω—è—è —Ä–æ–∑–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å "–û–Ω–ª–∞–π–Ω —Ç–∞–±–ª–æ" –∏ üîç
            ZStack {
                Color(hex: "#4e106f") // –§–æ–Ω —è—Ä–∫–æ-—Ä–æ–∑–æ–≤–æ–≥–æ —Ü–≤–µ—Ç–∞ (#4e106f)/(#FF00C0)
                    .edgesIgnoringSafeArea(.top)
                    .frame(height:50) // –í—ã—Å–æ—Ç–∞ –≤–µ—Ä—Ö–Ω–µ–π –ø–∞–Ω–µ–ª–∏

                // –¢–µ–∫—Å—Ç "–û–Ω–ª–∞–π–Ω —Ç–∞–±–ª–æ" –≤ —Ü–µ–Ω—Ç—Ä–µ
                Text("–û–Ω–ª–∞–π–Ω —Ç–∞–±–ª–æ")
                    .font(.headline)
                    .foregroundColor(.white)
                    .frame(maxWidth: .infinity, alignment: .center)

                // –ö–Ω–æ–ø–∫–∞ üîç —Å–ø—Ä–∞–≤–∞
                HStack {
                    Spacer()
                    Button(action: {
                        withAnimation(.easeInOut) {
                            isSearching.toggle()
                        }
                    }) {
                        Image(systemName: "magnifyingglass")
                            .font(.title3)
                            .foregroundColor(.white)
                            .padding(.trailing, 16)
                    }
                }
                .frame(maxWidth: .infinity, alignment: .trailing) // –í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–ø—Ä–∞–≤–æ
            }

            // –ö–∞—Å—Ç–æ–º–Ω–æ–µ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞ –±–µ–∑ –≥—Ä–∞–Ω–∏—Ü
            if isSearching {
                VStack(spacing: 4) {
                    HStack {
                        TextField("–ü–æ–∏—Å–∫", text: $viewModel.searchText)
                            .font(.system(size: 18)) // –†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞
                            .foregroundColor(.black) // –ß–µ—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç
                            .padding(.vertical, 6)
                            .background(Color.clear) // –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–±–∏—Ä–∞–µ–º —Ñ–æ–Ω
                            .accentColor(.black) // –¶–≤–µ—Ç –∫—É—Ä—Å–æ—Ä–∞

                        Button(action: {
                            withAnimation(.easeInOut) {
                                isSearching = false
                                viewModel.searchText = ""
                                UIApplication.shared.endEditing()
                            }
                        }) {
                            Image(systemName: "xmark.circle.fill")
                                .foregroundColor(.gray)
                        }
                    }
                    .padding(.horizontal, 16)

                    // –ß–µ—Ä–Ω–∞—è –ø–æ–ª–æ—Å–∫–∞-—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É —ç–∫—Ä–∞–Ω–∞
                    Rectangle()
                        .foregroundColor(.black)
                        .frame(maxWidth: .infinity)
                        .frame(height: 2)
                }
                .padding(.top, 6) // –û—Ç—Å—Ç—É–ø –ø–æ–¥ —Ä–æ–∑–æ–≤–æ–π —á–∞—Å—Ç—å—é
                .transition(.move(edge: .top).combined(with: .opacity)) // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
            }

            // –ö–∞—Å—Ç–æ–º–Ω—ã–π Tab Bar —Å –ø–æ–ª–æ—Å–∫–æ–π
            CustomTabBar(selectedTab: $selectedSubTab, swipeProgress: $swipeProgress)

            // TabView —Å –æ–±—ã—á–Ω—ã–º —Å–≤–∞–π–ø–æ–º –±–µ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–ª–æ—Å–∫–∏
            TabView(selection: $selectedSubTab) {
                FlightListView(viewModel: viewModel, selectedTab: $selectedSubTab, isSearching: $isSearching)
                    .tag(0)

                FlightListView(viewModel: viewModel, selectedTab: $selectedSubTab, isSearching: $isSearching)
                    .tag(1)
            }
            .tabViewStyle(PageTabViewStyle())
            .onChange(of: selectedSubTab) { newValue in
                withAnimation(.easeInOut) {
                    swipeProgress = CGFloat(newValue) // –ü–æ–ª–æ—Å–∫–∞ –º–µ–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–≤–∞–π–ø–∞
                }
            }
        }
        .navigationBarHidden(true) // –°–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π Navigation Bar
    }
}
