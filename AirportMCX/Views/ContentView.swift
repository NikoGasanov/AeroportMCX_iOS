//
//  ContentView.swift
//  AirportMCX
//
//  Created by Niko Gasanov on 15.01.2025.
//


//import SwiftUI
//
//struct ContentView: View {
//    @State private var selectedTab = 0 // –ù–∏–∂–Ω–∏–π TabBar: 0 - –¢–∞–±–ª–æ, 1 - –ü–∞—Ä–∫–∏–Ω–≥, 2 - –ë–∏–∑–Ω–µ—Å –∑–∞–ª—ã, 3 - –ù–∞–≤–∏–≥–∞—Ü–∏—è
//    @State private var selectedSubTab = 0 // –í–µ—Ä—Ö–Ω–∏–π TabBar: 0 - –í—ã–ª–µ—Ç—ã, 1 - –ü—Ä–∏–ª–µ—Ç—ã
//    @StateObject private var viewModel = FlightsViewModel()
//    @State private var isSearching = false // –£–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∂–∏–º–æ–º –ø–æ–∏—Å–∫–∞
//
//    var body: some View {
//        TabView(selection: $selectedTab) {
//            // –í–∫–ª–∞–¥–∫–∞ –¢–∞–±–ª–æ
//            NavigationView {
//                VStack {
//                    // –í–µ—Ä—Ö–Ω–∏–π —Ç–∞–± –±–∞—Ä
//                    Picker("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–±–ª–æ", selection: $selectedSubTab) {
//                        Text("–í—ã–ª–µ—Ç—ã").tag(0)
//                        Text("–ü—Ä–∏–ª–µ—Ç—ã").tag(1)
//                    }
//                    .pickerStyle(SegmentedPickerStyle())
//                    .padding()
//                    .onChange(of: selectedSubTab) { _ in
//                        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–∏—Å–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –≤–∫–ª–∞–¥–∫–∏
//                        withAnimation(.easeInOut) {
//                            isSearching = false
//                            viewModel.searchText = ""
//                            UIApplication.shared.endEditing()
//                        }
//                    }
//
//                    // TabView —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Å–≤–∞–π–ø–æ–≤
//                    TabView(selection: $selectedSubTab) {
//                        FlightListView(viewModel: viewModel, selectedTab: $selectedSubTab, isSearching: $isSearching) // –í—ã–ª–µ—Ç—ã
//                            .tag(0)
//
//                        FlightListView(viewModel: viewModel, selectedTab: $selectedSubTab, isSearching: $isSearching) // –ü—Ä–∏–ª–µ—Ç—ã
//                            .tag(1)
//                    }
//                    .tabViewStyle(PageTabViewStyle()) // –°–≤–∞–π–ø—ã –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏
//                    .animation(.easeInOut, value: selectedSubTab) // –ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ —Å–º–µ–Ω–µ
//                }
//                .navigationBarTitleDisplayMode(.inline)
//                .toolbar {
//                    // –õ–∏–±–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫, –ª–∏–±–æ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞ (—Å –∞–Ω–∏–º–∞—Ü–∏–µ–π)
//                    ToolbarItem(placement: .principal) {
//                        HStack {
//                            if isSearching {
//                                TextField("–ü–æ–∏—Å–∫", text: $viewModel.searchText)
//                                    .textFieldStyle(RoundedBorderTextFieldStyle())
//                                    .transition(.move(edge: .trailing).combined(with: .opacity)) // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
//                                    .overlay(
//                                        HStack {
//                                            Spacer()
//                                            Button(action: {
//                                                withAnimation(.easeInOut) {
//                                                    isSearching = false
//                                                    viewModel.searchText = "" // –û—á–∏—Å—Ç–∫–∞ –ø–æ–∏—Å–∫–∞
//                                                    UIApplication.shared.endEditing() // –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
//                                                }
//                                            }) {
//                                                Image(systemName: "xmark.circle.fill")
//                                                    .foregroundColor(.gray)
//                                                    .padding(.trailing, 10)
//                                            }
//                                        }
//                                    )
//                                    .frame(height: 36)
//                            } else {
//                                Text(selectedSubTab == 0 ? "–¢–∞–±–ª–æ –í—ã–ª–µ—Ç–∞" : "–¢–∞–±–ª–æ –ü—Ä–∏–ª–µ—Ç–∞")
//                                    .font(.headline)
//                                    .transition(.move(edge: .leading).combined(with: .opacity)) // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
//                            }
//                        }
//                        .padding(.horizontal, 10)
//                    }
//
//                    // –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞ (üîç) —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
//                    ToolbarItem(placement: .navigationBarTrailing) {
//                        if !isSearching {
//                            Button(action: {
//                                withAnimation(.easeInOut) {
//                                    isSearching = true
//                                }
//                            }) {
//                                Image(systemName: "magnifyingglass")
//                                    .transition(.scale) // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è/–∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
//                            }
//                        }
//                    }
//                }
//            }
//            .tabItem {
//                Label("–¢–∞–±–ª–æ", systemImage: "list.bullet")
//            }
//            .tag(0)
//
//            // –í–∫–ª–∞–¥–∫–∞ –ü–∞—Ä–∫–∏–Ω–≥
//            NavigationView {
//                Text("–ü–∞—Ä–∫–∏–Ω–≥")
//                    .font(.largeTitle)
//                    .bold()
//            }
//            .tabItem {
//                Label("–ü–∞—Ä–∫–∏–Ω–≥", systemImage: "car.fill")
//            }
//            .tag(1)
//
//            // –í–∫–ª–∞–¥–∫–∞ –ë–∏–∑–Ω–µ—Å –∑–∞–ª—ã
//            NavigationView {
//                Text("–ë–∏–∑–Ω–µ—Å –∑–∞–ª—ã")
//                    .font(.largeTitle)
//                    .bold()
//            }
//            .tabItem {
//                Label("–ë–∏–∑–Ω–µ—Å –∑–∞–ª—ã", systemImage: "briefcase.fill")
//            }
//            .tag(2)
//
//            // –í–∫–ª–∞–¥–∫–∞ –ù–∞–≤–∏–≥–∞—Ü–∏—è
//            NavigationView {
//                Text("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
//                    .font(.largeTitle)
//                    .bold()
//            }
//            .tabItem {
//                Label("–ù–∞–≤–∏–≥–∞—Ü–∏—è", systemImage: "map.fill")
//            }
//            .tag(3)
//        }
//    }
//}

import SwiftUI

struct ContentView: View {
    @State private var selectedTab = 0 // –ù–∏–∂–Ω–∏–π TabBar: 0 - –¢–∞–±–ª–æ, 1 - –ü–∞—Ä–∫–∏–Ω–≥, 2 - –ë–∏–∑–Ω–µ—Å –∑–∞–ª—ã, 3 - –ù–∞–≤–∏–≥–∞—Ü–∏—è
    @State private var selectedSubTab = 0 // –í–µ—Ä—Ö–Ω–∏–π TabBar: 0 - –í—ã–ª–µ—Ç—ã, 1 - –ü—Ä–∏–ª–µ—Ç—ã
    @StateObject private var viewModel = FlightsViewModel()
    @State private var isSearching = false // –£–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∂–∏–º–æ–º –ø–æ–∏—Å–∫–∞

    var body: some View {
        TabView(selection: $selectedTab) {
            // –í–∫–ª–∞–¥–∫–∞ –¢–∞–±–ª–æ
            NavigationView {
                VStack {
                    // –í–µ—Ä—Ö–Ω–∏–π —Ç–∞–± –±–∞—Ä
                    Picker("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–±–ª–æ", selection: $selectedSubTab) {
                        Text("–í—ã–ª–µ—Ç—ã").tag(0)
                        Text("–ü—Ä–∏–ª–µ—Ç—ã").tag(1)
                    }
                    .pickerStyle(SegmentedPickerStyle())
                    .padding()
                    .onChange(of: selectedSubTab) { _ in
                        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–∏—Å–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –≤–∫–ª–∞–¥–∫–∏
                        withAnimation(.easeInOut) {
                            isSearching = false
                            viewModel.searchText = ""
                            UIApplication.shared.endEditing()
                        }
                    }

                    // TabView —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Å–≤–∞–π–ø–æ–≤
                    TabView(selection: $selectedSubTab) {
                        FlightListView(viewModel: viewModel, selectedTab: $selectedSubTab, isSearching: $isSearching) // –í—ã–ª–µ—Ç—ã
                            .tag(0)

                        FlightListView(viewModel: viewModel, selectedTab: $selectedSubTab, isSearching: $isSearching) // –ü—Ä–∏–ª–µ—Ç—ã
                            .tag(1)
                    }
                    .tabViewStyle(PageTabViewStyle()) // –°–≤–∞–π–ø—ã –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏
                    .animation(.easeInOut, value: selectedSubTab) // –ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ —Å–º–µ–Ω–µ
                }
                .navigationBarTitleDisplayMode(.inline)
                .toolbar {
                    // –õ–∏–±–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫, –ª–∏–±–æ –∫–∞—Å—Ç–æ–º–Ω–∞—è –ø–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É
                    ToolbarItem(placement: .principal) {
                        GeometryReader { geometry in
                            VStack(spacing: 0) {
                                HStack {
                                    if isSearching {
                                        TextField("–ü–æ–∏—Å–∫", text: $viewModel.searchText)
                                            .padding(.vertical, 8)
                                            .foregroundColor(.primary)
                                            .multilineTextAlignment(.leading) // –¢–µ–∫—Å—Ç –∏–¥–µ—Ç —Å–ª–µ–≤–∞
                                            .frame(width: geometry.size.width - 50) // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞
                                            .transition(.move(edge: .trailing).combined(with: .opacity)) // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è

                                        // –ö—Ä–µ—Å—Ç–∏–∫ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–∏—Å–∫–∞
                                        Button(action: {
                                            withAnimation(.easeInOut) {
                                                isSearching = false
                                                viewModel.searchText = "" // –û—á–∏—Å—Ç–∫–∞ –ø–æ–∏—Å–∫–∞
                                                UIApplication.shared.endEditing() // –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
                                            }
                                        }) {
                                            Image(systemName: "xmark.circle.fill")
                                                .foregroundColor(.gray)
                                                .padding(.trailing, 10)
                                        }
                                    } else {
                                        Text(selectedSubTab == 0 ? "–¢–∞–±–ª–æ –í—ã–ª–µ—Ç–∞" : "–¢–∞–±–ª–æ –ü—Ä–∏–ª–µ—Ç–∞")
                                            .font(.headline)
                                            .transition(.move(edge: .leading).combined(with: .opacity)) // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
                                    }
                                }
                                .frame(width: geometry.size.width) // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –ø–æ–ª–µ –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Å—é —à–∏—Ä–∏–Ω—É

                                // –ß–µ—Ä–Ω–∞—è –ø–æ–ª–æ—Å–∫–∞-—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å (–Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É)
                                if isSearching {
                                    Rectangle()
                                        .frame(height: 2)
                                        .foregroundColor(.black)
                                        .transition(.opacity)
                                }
                            }
                            .frame(width: geometry.size.width) // –ì–∞—Ä–∞–Ω—Ç–∏—è, —á—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤–Ω—É—Ç—Ä–∏ –∑–∞–Ω–∏–º–∞—é—Ç –≤—Å—é —à–∏—Ä–∏–Ω—É
                        }
                        .frame(height: 44) // –í—ã—Å–æ—Ç–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
                    }

                    // –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞ (üîç) —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
                    ToolbarItem(placement: .navigationBarTrailing) {
                        if !isSearching {
                            Button(action: {
                                withAnimation(.easeInOut) {
                                    isSearching = true
                                }
                            }) {
                                Image(systemName: "magnifyingglass")
                                    .transition(.scale) // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è/–∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
                            }
                        }
                    }
                }
            }
            .tabItem {
                Label("–¢–∞–±–ª–æ", systemImage: "list.bullet")
            }
            .tag(0)

            // –í–∫–ª–∞–¥–∫–∞ –ü–∞—Ä–∫–∏–Ω–≥
            NavigationView {
                Text("–ü–∞—Ä–∫–∏–Ω–≥")
                    .font(.largeTitle)
                    .bold()
            }
            .tabItem {
                Label("–ü–∞—Ä–∫–∏–Ω–≥", systemImage: "car.fill")
            }
            .tag(1)

            // –í–∫–ª–∞–¥–∫–∞ –ë–∏–∑–Ω–µ—Å –∑–∞–ª—ã
            NavigationView {
                Text("–ë–∏–∑–Ω–µ—Å –∑–∞–ª—ã")
                    .font(.largeTitle)
                    .bold()
            }
            .tabItem {
                Label("–ë–∏–∑–Ω–µ—Å –∑–∞–ª—ã", systemImage: "briefcase.fill")
            }
            .tag(2)

            // –í–∫–ª–∞–¥–∫–∞ –ù–∞–≤–∏–≥–∞—Ü–∏—è
            NavigationView {
                Text("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
                    .font(.largeTitle)
                    .bold()
            }
            .tabItem {
                Label("–ù–∞–≤–∏–≥–∞—Ü–∏—è", systemImage: "map.fill")
            }
            .tag(3)
        }
    }
}

